{"version":3,"sources":["components/Indonesia.jsx","App.js","components/Sidebar.jsx","components/Dunia.jsx","serviceWorker.js","index.js"],"names":["Indonesia","props","getSummary","fetch","then","response","json","result","setState","isLoaded","summaries","error","getDetails","details","state","this","id","className","map","summary","key","class","positif","sembuh","meninggal","scope","detail","attributes","Provinsi","Kasus_Posi","Kasus_Semb","Kasus_Meni","Component","window","jQuery","$","global","App","path","exact","component","Dunia","Sidebar","href","style","backgroundImage","to","icon","faFacebook","size","faInstagram","faGithub","Country_Region","Last_Update","Lat","Long_","Confirmed","Deaths","Recovered","Active","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2df9ab91.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Indonesia extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error : null,\n            isLoaded : false,\n            summaries : [],\n            details : []\n        };\n    }\n\n    componentDidMount() {\n        this.getSummary()\n        this.getDetails()\n    }\n\n    getSummary = () => {\n        fetch(\"https://api.kawalcorona.com/indonesia/\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                this.setState({\n                    isLoaded : true,\n                    summaries : result\n                });\n            },\n\n            // Handle error\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n        )\n    }\n\n    getDetails = () => {\n        fetch(\"https://api.kawalcorona.com/indonesia/provinsi/\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                this.setState({\n                    isLoaded : true,\n                    details : result\n                });\n            },\n            // Handle error\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n        )\n    }\n\n    render() {\n        const {error, isLoaded, summaries, details} = this.state;\n        if(error){\n            return <div>Error in loading</div>\n        }else if (!isLoaded) {\n            return <div>Loading ...</div>\n        }else{\n            return (\n                <div id=\"content\" className=\"p-4 p-md-5\">\n                    <h2 className=\"mb-4\">DATA COVID19 - Indonesia</h2>\n                    { summaries.map(summary => (\n                        <div key={summary.id} className=\"row\">\n                            <div className=\"col-md-4 col-sm-6 col-xs-12\">\n                                <div className=\"info-box\">\n                                    <span className=\"info-box-icon bg-yellow\"><i class=\"fa fa-group\"></i></span>\n\n                                    <div className=\"info-box-content\">\n                                        <span className=\"info-box-text\">POSITIF</span>\n                                        <span className=\"info-box-number\">{summary.positif}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 col-sm-6 col-xs-12\">\n                                <div className=\"info-box\">\n                                    <span className=\"info-box-icon bg-green\"><i class=\"fa fa-smile-o\"></i></span>\n                                    <div className=\"info-box-content\">\n                                        <span className=\"info-box-text\">SEMBUH</span>\n                                        <span className=\"info-box-number\">{summary.sembuh}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 col-sm-6 col-xs-12\">\n                                <div className=\"info-box\">\n                                    <span className=\"info-box-icon bg-red\"><i class=\"fa fa-ambulance\"></i></span>\n                                    <div className=\"info-box-content\">\n                                        <span className=\"info-box-text\">MENINGGAL</span>\n                                        <span className=\"info-box-number\">{summary.meninggal}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                    <h4>Sistem Informasi Penyebaran Corona (Covid-19) - Indonesia</h4>\n                    <table id=\"details\" className=\"table table-bordered table-striped\">\n                        <thead className=\"thead-dark\">\n                          <tr>\n                            <th scope=\"col\">Propinsi</th>\n                            <th scope=\"col\">Positif</th>\n                            <th scope=\"col\">Sembuh</th>\n                            <th scope=\"col\">Meninggal</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                            { details.map(detail => (\n                                <tr key={detail.id}>\n                                    <th scope=\"row\">{detail.attributes.Provinsi}</th>\n                                    <td>{detail.attributes.Kasus_Posi}</td>\n                                    <td>{detail.attributes.Kasus_Semb}</td>\n                                    <td>{detail.attributes.Kasus_Meni}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Indonesia;\n","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar'\nimport Indonesia from './components/Indonesia'\nimport Dunia from './components/Dunia'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './style/styles.css'\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper d-flex align-items-stretch\">\n          <Sidebar />\n          <Route path=\"/\" exact component={Indonesia} />\n          <Route exact path=\"/indonesia\" component={Indonesia} />\n          <Route exact path=\"/dunia\" component={Dunia} />\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Label } from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebook,\n  faInstagram,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Sidebar = () => (\n  <nav id=\"sidebar\">\n    <div className=\"p-4 pt-5\">\n      <Link href=\"#\" className=\"img logo rounded-circle mb-5\" style={{ backgroundImage: 'url(https://www.ucdavis.edu/sites/default/files/styles/panopoly_image_full/public/general/coronavirus-covid-19-icon-uc-davis-200.png)' }} />\n      <ul className=\"list-unstyled components mb-5\">\n        <li>\n          <Link to=\"/indonesia\">Indonesia</Link>\n        </li>\n        <li>\n          <Link to=\"/dunia\">Dunia</Link>\n        </li>\n        <li>\n          <a href=\"https://www.iblogtren.com\">My Blogs </a>\n        </li>\n        <Label>Social Media</Label>\n        <div className=\"social-container\">\n          <a\n            href=\"https://www.facebook.com/decker.densuz/\"\n            className=\"facebook social\"\n          >\n            <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\n          </a>\n          <span>  </span>\n          <a\n            href=\"https://www.instagram.com/learnbuildteach\"\n            className=\"instagram social\"\n          >\n            <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n          </a>\n          <span>  </span>\n          <a\n            href=\"https://www.github.com/densuz\"\n            className=\"github\"\n          >\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n          </a>\n        </div>\n      </ul>\n      <div className=\"footer\">\n        <p>Copyright © 2020 Deni Susanto <br />All rights reserved.</p>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport  'bootstrap'\n class Dunia extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            error : null,\n            isLoaded : false,\n            summaries : [],\n            details : []\n        };\n    }\n\n    componentDidMount() {\n        this.getSummary()\n        this.getDetails()\n    }\n\n    getSummary = () => {\n        fetch(\"https://api.kawalcorona.com/\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                this.setState({\n                    isLoaded : true,\n                    summaries : result\n                });\n            },\n            // Handle error\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n        )\n    }\n\n    getDetails = () => {\n        fetch(\"https://api.kawalcorona.com/\")\n        .then( response => response.json())\n        .then(\n            // handle the result\n            (result) => {\n                this.setState({\n                    isLoaded : true,\n                    details : result\n                });\n            },\n            // Handle error\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            },\n        )\n    }\n\n    render() {\n        const {error, isLoaded, summaries, details} = this.state;\n        if(error){\n            return <div>Error in loading</div>\n        }else if (!isLoaded) {\n            return <div>Loading ...</div>\n        }else{\n            return (\n                <div id=\"content\" className=\"p-4 p-md-5\">\n                    <h2 className=\"mb-4\">DATA COVID19 - Global</h2>\n                    { summaries.map(summary => (\n                        <div key={summary.id} className=\"row\">\n                            \n                            \n                        </div>\n                    ))}\n                    <h4>Sistem Informasi Penyebaran Corona (Covid-19) - Global</h4>\n                    <table id=\"details\" className=\"table table-bordered table-striped\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">Country</th>\n                                <th scope=\"col\">Last update</th>\n                                <th scope=\"col\">Latitude</th>\n                                <th scope=\"col\">Longitude</th>\n                                <th scope=\"col \">Confirmed</th>\n                                <th scope=\"col\">Deaths</th>\n                                <th scope=\"col\">Recovered</th>\n                                <th scope=\"col\">Active</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { details.map(detail => (\n                                <tr key={detail.id}>\n                                    <th scope=\"row\">{detail.attributes.Country_Region}</th>\n                                    <td>{detail.attributes.Last_Update}</td>\n                                    <td>{detail.attributes.Lat}</td>\n                                    <td>{detail.attributes.Long_}</td>\n                                    <td>{detail.attributes.Confirmed}</td>\n                                    <td>{detail.attributes.Deaths}</td>\n                                    <td>{detail.attributes.Recovered}</td>\n                                    <td>{detail.attributes.Active}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Dunia;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}